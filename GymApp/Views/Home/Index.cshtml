@model DashboardViewModel

        <div class="container-fluid">
            <h1>My Dashboard</h1>
            <hr>
            @*<div class="col-xl-3 col-sm-6 mb-3">
                    <div class="card text-white bg-primary o-hidden h-100">
                        <div class="card-body">
                        <div class="card-body-icon">
                        <i class="fa fa-heartbeat"></i>
                        </div>
                        <div class="mr-5">Exercise today</div>
                        <div class="mr-5">
                        @if(Model.schedule.Exercises.Count == 0)
                        {
                            <p>You don't have a program selected</p>
                            @Html.ActionLink("Click here to create one","TRAINING", "Home")
                        }
                        @foreach(string item in Model.schedule.Exercises)
                        {
                        @item
                        <br />
                        }
                        </div>
                        </div>
                        <a class="card-footer text-white clearfix small z-1" href="#">
                            <span class="float-left">View full training program</span>
                            <span class="float-right">
                            <i class="fa fa-angle-right"></i>
                            </span>
                        </a>
                    </div>
                </div>*@
            <!-- Icon Cards-->
            <div class="row">
                @if (Model.schedule.Workouts.Count == 0)
                {
                    <div class="col-xl-6 col-sm-6 mb-3">
                        <div class="card text-white bg-primary o-hidden h-100">
                            <div class="card-body">
                                <div class="card-body-icon">
                                    <i class="fa fa-heartbeat"></i>
                                </div>
                                <div class="mr-5">Exercise today</div>
                                <div class="mr-5">
                                    <p>You don't have any workout created</p>
                                </div>
                            </div>
                            <a class="card-footer text-white clearfix small z-1" href="@Url.Action("Workouts", "Workout")">
                                <span class="float-left">Click here to create one</span>
                                <span class="float-right">
                                    <i class="fa fa-angle-right"></i>
                                </span>
                            </a>
                        </div>
                    </div>
                }
                else
                {
                    foreach (TrainingProgram work in Model.schedule.Workouts)
                    {
                        <div class="col-xl-6 col-sm-6 mb-3">
                            <div class="card text-white bg-primary o-hidden h-100">
                                <div class="card-body">
                                    <div class="card-body-icon">
                                        <i class="fa fa-heartbeat"></i>
                                    </div>
                                    <div class="mr-5">Exercises today for workout: <span class="font-weight-bold">@work.name</span></div>
                                    @if (work.ActualExercisesCount > 0)
                                    {
                                        <div class="mr-5">
                                            <ul>
                                                @foreach (ProgramExercises ex in work.Exercices)
                                                {
                                                    if (ex.day == work.ActualDay)
                                                    {
                                                        //var name = Model.schedule.ExerciseNames.GetValueOrDefault(ex.ExerciseID);
                                                        //if (name != null)
                                                        //{
                                                            <li>
                                                                @Html.ActionLink(ex.Name, "ExerciseDetail", "Home", new { id = ex.ExerciseID }, new { @class = "text-white", data_toggle = "tooltip", data_placement = "top", title = "More info about this Exercise" })
                                                            </li>
                                                        //}

                                                    }
                                                }
                                            </ul>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="mr-5">No exercises today for this workout</div>

                                    }
                                </div>
                                <a class="card-footer text-white clearfix small z-1" href="@Url.Action("WorkoutInfo", "Workout", new { id = work.id})">
                                    <span class="float-left">View full workout</span>
                                    <span class="float-right">
                                        <i class="fa fa-angle-right"></i>
                                    </span>
                                </a>
                            </div>
                        </div>
                    }
                }
                <div class="col-xl-6 col-sm-6 mb-3">
                    <div class="card text-white bg-warning o-hidden h-100">
                        <div class="card-body">
                            <div class="card-body-icon">
                                <i class="fa fa-fw fa-bicycle"></i>
                            </div>
                            <div class="mr-5">Suggested exercises for you!</div>
                            <div class="mr-5">
                                <ul>
                                    @foreach (Exercise ex in Model.schedule.Suggested)
                                    {
                                    <li>
                                        @Html.ActionLink(ex.name, "ExerciseDetail", "Home", new { id = ex.id }, new { @class = "text-white", data_toggle = "tooltip", data_placement = "top", title = "More info about this Exercise" })
                                    </li>
                                    }
                                </ul>
                            </div>
                        </div>
                        <a class="card-footer text-white clearfix small z-1" href="@Url.Action("Exercises", "Home")">
                            <span class="float-left">View all our exercises</span>
                            <span class="float-right">
                                <i class="fa fa-angle-right"></i>
                            </span>
                        </a>
                    </div>
                </div>
                @*<div class="col-xl-3 col-sm-6 mb-3">
                    <div class="card text-white bg-success o-hidden h-100">
                        <div class="card-body">
                            <div class="card-body-icon">
                                <i class="fa fa-fw fa-shopping-cart"></i>
                            </div>
                            <div class="mr-5">123 New Orders!</div>
                        </div>
                        <a class="card-footer text-white clearfix small z-1" href="#">
                            <span class="float-left">View Details</span>
                            <span class="float-right">
                                <i class="fa fa-angle-right"></i>
                            </span>
                        </a>
                    </div>
                </div>
                <div class="col-xl-3 col-sm-6 mb-3">
                    <div class="card text-white bg-danger o-hidden h-100">
                        <div class="card-body">
                            <div class="card-body-icon">
                                <i class="fa fa-fw fa-support"></i>
                            </div>
                            <div class="mr-5">13 New Tickets!</div>
                        </div>
                        <a class="card-footer text-white clearfix small z-1" href="#">
                            <span class="float-left">View Details</span>
                            <span class="float-right">
                                <i class="fa fa-angle-right"></i>
                            </span>
                        </a>
                    </div>
                </div>*@
            </div>
        </div>







    <div class="container-fluid">
        <!-- Area Chart -->
        <div class="card mb-3">
            <div class="card-header">
                <i class="fa fa-area-chart"></i> <span id="chartTitle">Your Progress</span>
            </div>
            <div class="card-body">
                <canvas id="myChart" width="100%" height="30"></canvas>
            </div>
            <div class="card-footer small text-muted">
                <div class="row">
                    <div class="col-md-3">
                        <select id="workoutSelect" onchange="javascript:getList(this.value);">
                            <option value="0">Choose a Workout</option>
                            @foreach (TrainingProgram work in Model.schedule.Workouts)
                            {
                                <option value="@work.id">@work.name</option>
                            }
                        </select>
                    </div>
                    <div id="exerciseDiv" style="display:none;">
                        <select id="exerciseSelect" onchange="javascript:showButton(this.value);"></select>
                    </div>
                    <div class="col-md-3" id="buttonDiv" style="display:none;">
                        <button id="test">Generate Graph</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.container-fluid-->
    <!-- /.content-wrapper-->
    @*<footer class="sticky-footer">
        <div class="container">
            <div class="text-center">
                <small>Copyright © Your Website 2018</small>
            </div>
        </div>
    </footer>*@
    <!-- Logout Modal-->
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">Select "Logout" below if you are ready to end your current session.</div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                    <a class="btn btn-primary" href="login.html">Logout</a>
                </div>
            </div>
        </div>
    </div>
    <!-- Page level plugin JavaScript-->
    <script src="~/style/vendor/chart.js/Chart.min.js"></script>
    <!-- Custom scripts for this page-->
    @*<script src="~/style/js/sb-admin-charts.min.js"></script>*@
<script>
    function showButton(id) {
        if (id > 0) {
            $("#buttonDiv").show();
        }
        else {
            $("#buttonDiv").hide();
        }
    }

    function getList(_id) {
        if (_id == 0) {
            $("#buttonDiv").hide();
            $("#exerciseDiv").hide();
        }
        else {
            $("#exerciseDiv").show();

            var json = JSON.stringify({
                'workoutID': _id
            });

            $.ajax({
                url: '@Url.Action("GetExercisesByID", "Home")',
                type: "POST",
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: json,
                cache: false,
                success: function (data) {
                    data = JSON.parse(data);
                    console.log(data);
                    var markup = "<option value='0'>Choose an Exercise</option>";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#exerciseSelect").html(markup);
                    $("#exerciseDiv").show();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
                });
        }
    }




    //Chart
    $("#test").click(function () { 
        var data = [50];
        var label = ["Day 8"];
        myLineChart.data.labels.pop();
        myLineChart.data.datasets.forEach((dataset) => {
            dataset.data.pop;
        });
        //myLineChart.data.datasets[0].data.push(data);
        //myLineChart.options = {
        //    scales: {
        //        xAxes: [{
        //            time: {
        //                unit: 'date'
        //            },
        //            gridLines: {
        //                display: false
        //            },
        //            ticks: {
        //                maxTicksLimit: 7
        //            }
        //        }],
        //        yAxes: [{
        //            ticks: {
        //                min: 0,
        //                max: 50,
        //                maxTicksLimit: 5
        //            },
        //            gridLines: {
        //                color: "rgba(0, 0, 0, .125)",
        //            }
        //        }],
        //    },
        //    legend: {
        //        display: true
        //    }
        //}
        myLineChart.update();
    });

    $(document).ready(function () {
        var json = JSON.stringify({
            'ProgramID': "1"
        });

        $.ajax({
            url: '@Url.Action("GraphData", "Home")',
            type: "POST",
            headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: json,
            success: function (data) {
                var result = JSON.parse(data);
                console.log(result);

                $("#chartTitle").text("Your progress for workout: " + result.WorkoutName);

                var ctx = document.getElementById("myChart");
                var myLineChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: [],
                        datasets: [{
                            label: result.ExerciseName,
                            lineTension: 0.3,
                            backgroundColor: "rgba(2,117,216,0.2)",
                            borderColor: "rgba(2,117,216,1)",
                            pointRadius: 5,
                            pointBackgroundColor: "rgba(2,117,216,1)",
                            pointBorderColor: "rgba(255,255,255,0.8)",
                            pointHoverRadius: 5,
                            pointHoverBackgroundColor: "rgba(2,117,216,1)",
                            pointHitRadius: 20,
                            pointBorderWidth: 2,
                            data: [],
                        }],
                    },
                    options: {
                        scales: {
                            xAxes: [{
                                time: {
                                    unit: 'date'
                                },
                                gridLines: {
                                    display: false
                                },
                                ticks: {
                                    maxTicksLimit: 7
                                }
                            }],
                            yAxes: [{
                                ticks: {
                                    min: 0,
                                    max: result.GraphMax,
                                    maxTicksLimit: 5
                                },
                                gridLines: {
                                    color: "rgba(0, 0, 0, .125)",
                                }
                            }],
                        },
                        legend: {
                            display: true
                        }
                    }
                });

                myLineChart.data.labels.push(result.Label);
                myLineChart.data.datasets[0].data.push(result.Values);
                myLineChart.update();
            },   
            error: function () {
                console.log("An error happened");
            }
        });
    });

    //var ctx = document.getElementById("myChart");
    //var myLineChart = new Chart(ctx, {
    //    type: 'line',
    //    data: {
    //        labels: ["Day 1", "Day 2", "Day 3", "Day 4", "Day 5", "Day 6", "Day 7"],
    //        datasets: [{
    //            label: "Sessions",
    //            lineTension: 0.3,
    //            backgroundColor: "rgba(2,117,216,0.2)",
    //            borderColor: "rgba(2,117,216,1)",
    //            pointRadius: 5,
    //            pointBackgroundColor: "rgba(2,117,216,1)",
    //            pointBorderColor: "rgba(255,255,255,0.8)",
    //            pointHoverRadius: 5,
    //            pointHoverBackgroundColor: "rgba(2,117,216,1)",
    //            pointHitRadius: 20,
    //            pointBorderWidth: 2,
    //            data: [10, 15, 17, 20, 50, 19, 22],
    //        },
    //        {
    //            label: "Test",
    //            lineTension: 0.3,
    //            backgroundColor: "rgba(2,117,216,0.2)",
    //            borderColor: "rgba(2,117,216,1)",
    //            pointRadius: 5,
    //            pointBackgroundColor: "rgba(2,117,216,1)",
    //            pointBorderColor: "rgba(255,255,255,0.8)",
    //            pointHoverRadius: 5,
    //            pointHoverBackgroundColor: "rgba(2,117,216,1)",
    //            pointHitRadius: 20,
    //            pointBorderWidth: 2,
    //            data: [15, 20, 25, 30, 35, 40, 45],
    //        }],
    //    },
    //    options: {
    //        scales: {
    //            xAxes: [{
    //                time: {
    //                    unit: 'date'
    //                },
    //                gridLines: {
    //                    display: false
    //                },
    //                ticks: {
    //                    maxTicksLimit: 7
    //                }
    //            }],
    //            yAxes: [{
    //                ticks: {
    //                    min: 0,
    //                    max: 50,
    //                    maxTicksLimit: 5
    //                },
    //                gridLines: {
    //                    color: "rgba(0, 0, 0, .125)",
    //                }
    //            }],
    //        },
    //        legend: {
    //            display: true
    //        }
    //    }
    //});
    
</script>
