@using System.Collections.Generic
@using System.Linq
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@model WorkoutViewModel 
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@{
    TrainingProgram program = ViewBag.Program;
    List<Exercise> exercises = ViewBag.Exercises;
    ViewData["Title"] = "Program " + program.name + " Information";
    AppUser user = null;
    Dictionary<int, string> names = ViewBag.Names;
    Dictionary<int, string> aunits = new Dictionary<int, string>();
    Dictionary<int, string> wunits = new Dictionary<int, string>();
    aunits.Add(1, "Kilometers");
    aunits.Add(2, "Miles");
    aunits.Add(3, "Minutes");
    aunits.Add(4, "Repetition");
    wunits.Add(1, "Body Weight");
    wunits.Add(2, "Kilograms");
    wunits.Add(3, "Pounds");
    if (SignInManager.IsSignedIn(User))
    {
        user = await UserManager.GetUserAsync(User);
    }
}
@if (SignInManager.IsSignedIn(User))
{
<style>
    #loading-indicator {
        background-color:rgba(255, 255, 255, 0.7);
        background-size:cover;
        position: absolute;
        left: 50%;
        top: 50%;
    }
</style>
<h2>@ViewData["Title"]</h2>
<hr />
<div class="container">

    <div class="mymodal"><img src="~/images/45.gif" id="big-loading-indicator" style="display:none" /></div>
    @using (Html.BeginForm("AddSets", "Workout", FormMethod.Post, new { id = "AddSetsForm" }))
    {
    }
    <ul class="nav nav-tabs">
        <li class="nav-item active">
            <a class="nav-link active show" data-toggle="tab" aria-expanded="true" href="#day1">Day 1</a>
        </li>
        @for (int i = 2; i <= 7; i++)
        {
            <li class="nav-item">
                <a class="nav-link" data-toggle="tab" href="#day@(i)">Day @i</a>
            </li>
        }
    </ul>

    <input hidden id="ProgramCurrent" value="@program.id" />
    <div class="tab-content">
        <div id="topList" class="text-success">
        </div>
        @for (int i = 1; i <= 7; i++)
        {
            if (i == 1)
            {
                @:<div class="tab-pane active" id="day1">
                }
                else
                {
                    @:<div class="tab-pane" id="day@(i)" i>
                    }
                    if (program.Exercices.Where(d => d.day == i).Count() <= 0)
                    {
                        <div class="card" style="margin-bottom:1%; margin-top:1%;">
                            <div class="card-header text-center" style="padding-top:2.5%;">
                                <h5 class="card-title">You currently have no exercises for this day</h5>
                            </div>
                        </div>
                    }
                    else
                    {
                        if (program.Exercices.Where(d => d.day == i).Count() <= 0)
                        {
                            <div class="card" style="margin-bottom:1%; margin-top:1%;">
                                <div class="card-header text-center" style="padding-top:2.5%;">
                                    <h5 class="card-title">You have no current exercises for this day...</h5>
                                </div>
                            </div>
                        }
                        else
                        {
                            @foreach (var ex in program.Exercices)
                            {
                                int j = 0;
                                if (ex.day == i)
                                {
                                    <div id="exercise@(ex.id)" class="card" style="margin-bottom:1%; margin-top:1%;">
                                        <div class="card-header">
                                            <div class="row card-group">
                                                <div class="form-group col-md-9">
                                                    <h5 class="card-title">@names.GetValueOrDefault(ex.ExerciseID)</h5>
                                                </div>
                                                <div class="form-group col-md-1">
                                                    <a class="nav-link" data-toggle="collapse" href="#set@(ex.id)">
                                                        <i class="fa fa-fw fa-expand" data-toggle="tooltip" data-placement="top" title="Open Sets information"></i>
                                                    </a>
                                                </div>
                                                <div class="form-group col-md-1" style="padding-right:1%;">
                                                    <a class="nav-link" onclick="exerciseEdit('@program.id', '@ex.id', '@ex.ExerciseID', '@ex.day')" data-toggle="modal" data-target="#EditExerciseModal">
                                                        <i class="fa fa-edit" data-toggle="tooltip" data-placement="top" title="Edit this Exercise "></i>
                                                    </a>
                                                </div>
                                                <div class="form-group col-md-1" style="padding-right:1%;">
                                                    <a class="nav-link" onclick="exercisesDelete(@ex.id)">
                                                        <i class="fa fa-fw fa-trash" data-toggle="tooltip" data-placement="top" title="Delete this Exercise "></i>
                                                    </a>
                                                </div>
                                            </div>
                                            <div class="collapse" id="set@(ex.id)">
                                                <div class="card card-body">
                                                    <table id="ExerciseTable" tag="@(ex.id)" class="table table-striped">
                                                        <thead>
                                                            <tr>
                                                                <th scope="col">Amount</th>
                                                                <th scope="col">Unit</th>
                                                                <th scope="col">Weight</th>
                                                                <th scope="col">Unit</th>
                                                                <th scope="col"></th>
                                                                <th scope="col"></th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var set in ex.SetInfo)
                                                            {
                                                                @using (Html.BeginForm("AddSets", "Workout", FormMethod.Post, new { id = "AddSetsTo" }))
                                                                {
                                                                    <tr id="@(set.id)">
                                                                        <td>@set.amount</td>
                                                                        <td>@aunits.GetValueOrDefault(set.aunit)</td>
                                                                        <td>@set.weight</td>
                                                                        <td>@wunits.GetValueOrDefault(set.wunit)</td>
                                                                        <td>
                                                                            @*<i onclick="setEdit()" class="fa fa-edit" data-toggle="tooltip" data-placement="top" title="Edit this Set "></i>*@
                                                                            <a class="saveRow"></a>
                                                                        </td>
                                                                        <td>
                                                                            <i onclick="setDelete(@set.id)" class="fa fa-fw fa-trash" data-toggle="tooltip" data-placement="top" title="Delete this Set"></i>
                                                                            <a class="removeRow"></a>
                                                                        </td>
                                                                    </tr>
                                                                    @*<div class="SuccessIF text-success"></div>
                                                                        <div class="ErrorIf text-danger"></div>*@
                                                                }
                                                            }
                                                        </tbody>
                                                        <tfoot>
                                                            <tr>
                                                                <td colspan="5" style="text-align: left;">
                                                                    <input type="button" class="btn btn-lg btn-block btn-primary addrow" value="Add Set" />
                                                                </td>
                                                            </tr>
                                                            <tr></tr>
                                                        </tfoot>
                                                    </table>
                                                    <p id="success" class="SuccessIF text-success"></p>
                                                    <p id="errorAdd" class="ErrorIf text-danger"></p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        }
                    }

                @:</div>
            }
        <div class="row">
            <div class="col-md-12">
                <button class="btn btn-primary col-md-5" data-toggle="modal" data-target="#AddExerciseModal" onclick="exerciseAdd('@program.id')">Add an Exercise to this Workout day</button>
            </div>
        </div>
    </div>
    <div class="row" style="margin-top:10%;">
        @Html.ActionLink("Back to Workouts", "Workouts", "Workout", null, new { @class = "btn btn-primary col-md-3" })
    </div>

    <div class="modal fade" id="EditExerciseModal" tabindex="-1" role="dialog" aria-labelledby="ExerciseModal" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="ExerciseModal">Editing an exercise</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                @using (Html.BeginForm("EditExercise", "Workout", FormMethod.Post, new { id = "EditExerciseForm" }))
                {
                    <div class="modal-body">
                        <input id="id" asp-for="UserID" hidden value="@user.Id" />
                        <input id="pid" asp-for="ProgramID" hidden />
                        <input id="exid" asp-for="DBExerciseID" hidden />
                        <div asp-validation-summary="All" class="text-danger"></div>
                        <div class="form-group col-md-12">
                            <label asp-for="ExerciseID"></label>
                            <select asp-for="ExerciseID" class="form-control js-example-basic-single">
                                <option value="-1">Choose an Exercise..</option>
                                @foreach (var item in exercises)
                                {
                                    <option value="@item.id">@item.name</option>
                                }
                            </select>
                            <span asp-validation-for="ExerciseID" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-12">
                            <label asp-for="Day"></label>
                            <select asp-for="Day" class="form-control">
                                <option value="0" selected>Choose from..</option>
                                <option value="1">1</option>
                                <option value="2">2</option>
                                <option value="3">3</option>
                                <option value="4">4</option>
                                <option value="5">5</option>
                                <option value="6">6</option>
                                <option value="7">7</option>
                            </select>
                            <span asp-validation-for="Day" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="modal fade" id="AddExerciseModal" tabindex="-1" role="dialog" aria-labelledby="ExerciseModal" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="ExerciseModal">Adding an exercise to a Workout</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                @using (Html.BeginForm("AddExerciseToDay", "Workout", FormMethod.Post, new { id = "AddExerciseForm" }))
                {
                    <div class="modal-body">
                        <input id="idE" asp-for="UserID" hidden value="@user.Id" />
                        <input id="pidE" asp-for="ProgramID" hidden />
                        <input id="dayE" asp-for="Day" hidden />
                        <div asp-validation-summary="All" class="text-danger"></div>
                        <div class="form-group col-md-12">
                            <label asp-for="ExerciseID"></label>
                            <select id="ExerciseIDE" asp-for="ExerciseID" class="form-control js-example-basic-single">
                                <option value="-1">Choose an Exercise..</option>
                                @foreach (var item in exercises)
                                {
                                    <option value="@item.id">@item.name</option>
                                }
                            </select>
                            <span asp-validation-for="ExerciseID" class="text-danger"></span>
                        </div>
                        <div class="SetInfo form-row col-md-12">
                            <div class="form-group col-md-3">
                                <label asp-for="Amount"></label>
                                <input type="number" min="0" asp-for="Amount" class="form-control" />
                                <span asp-validation-for="Amount" class="text-danger"></span>
                            </div>
                            <div class="form-group col-md-3">
                                <label asp-for="Aunit"></label>
                                <select asp-for="Aunit" class="form-control">
                                    <option value="0" selected>Choose from..</option>
                                    <option value="1">Kilometers</option>
                                    <option value="2">Miles</option>
                                    <option value="3">Minutes</option>
                                    <option value="4">Repetitions</option>
                                </select>
                                <span asp-validation-for="Aunit" class="text-danger"></span>
                            </div>
                            <div class="form-group col-md-3">
                                <label asp-for="Weight"></label>
                                <input type="number" asp-for="Weight" class="form-control" />
                                <span asp-validation-for="Weight" class="text-danger"></span>
                                <em style="font-size:80%;">Optional</em>
                            </div>
                            <div class="form-group col-md-3">
                                <label asp-for="Wunit"></label>
                                <select asp-for="Wunit" class="form-control">
                                    <option value="0" selected>Choose from..</option>
                                    <option value="1">Body Weight</option>
                                    <option value="2">Kilograms</option>
                                    <option value="3">Pounds</option>
                                </select>
                                <span asp-validation-for="Wunit" class="text-danger"></span>
                                <em style="font-size:80%;">Optional</em>
                            </div>
                        </div>
                        <div class="form-row col-md-12 text-center">
                            <em style="font-size:90%;">
                                If you want to add more statistics to this exercise, you can do it
                                in the Workout information. Those "first statistics" allow us to set a base for your account
                                (e.g. It's your current maximum for this exercise).
                            </em>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Add</button>
                    </div>
                }
            </div>
        </div>
    </div>

</div>
<div class="mymodal"><img src="~/images/45.gif" id="loading-indicator" style="display:none" /></div>
}
else
{
<div class="container h-50" style="margin-top:32%;">
    <div class="row w-100 text-center">
        <div class="col-md-12">
            <h1 id="homeTitle" class="display-3 text-dark font-weight-bold">You are not logged in</h1>
        </div>
    </div>
    <div class="row text-center">
        <div class="col-md-12" style="padding-top:3%;">
            @Html.ActionLink("Register now !", "Register", "Account", null, new { @class = "btn btn-primary col-md-4", style = "margin: 0.5rem" })
        </div>
    </div>
    <div class="row text-center">
        <div class="col-md-12">

            @Html.ActionLink("Login to your account", "Login", "Account", null, new { @class = "btn btn-primary col-md-4", style = "margin: 0.5rem" })
        </div>
    </div>
</div>
}
@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")


    <script>

        $(document).ready(function () {
            $(".SuccessIF").hide();
            $(".ErrorIf").hide();
            var counter = 0;

            $(".addrow").on("click", function () {
                $(".addrow").hide();
                $(".SuccessIF").show();
                $(".ErrorIf").show();
                var newRow = $('<tr id="insert">');
                var cols = "";

                cols += '<td id="amount' + counter + '"><input type="number" placeholder="Enter a number" class="form-control" id="iamount' + counter + '"/></td>';
                cols += '<td id="aunit' + counter + '"><select class="form-control" id="iaunit' + counter + '"><option value="0" selected>Choose from..</option><option value="1">Kilometers</option><option value="2">Miles</option><option value="3">Minutes</option><option value="4">Repetition</option></select></td>';
                cols += '<td id="weight' + counter + '"><input type="number" placeholder="Enter a number" class="form-control" id="iweight' + counter + '"/></td>';
                cols += '<td id="wunit' + counter + '"><select class="form-control" id="iwunit' + counter + '"><option value="0" selected>Choose from..</option><option value="1">Body Weight</option><option value="2">Kilograms</option><option value="3">Pounds</option></select></td>';

                cols += '<td><button type="button" class="ibtnSave btn-success" data-href="addMyNewSet();" data-toggle="modal" data-target="#confirm-adding"><span class="fa fa-check-circle"></span></button>' +
                    '   <button type="button" class="ibtnRem btn-danger" aria-label="Close"> <span class="fa fa-times-circle"></span></button ></td > ';
                cols += '<td id="trash' + counter + '"></td>';

                newRow.append(cols);
                $(this).closest("table.table-striped").append(newRow);
                counter++;
            });

            $("table.table-striped").on("click", ".ibtnRem", function (event) {
                $(this).closest("tr").remove();
                $(".SuccessIF").hide();
                $(".ErrorIf").hide();
                counter -= 1
                $(".addrow").show();
            });

            $("table.table-striped").on("click", ".ibtnSave", function (event) {
                //$("#errorAdd").text("").hide();
                //$("#success").text("").hide();
                var amount = document.getElementById("iamount" + (counter - 1)).value;
                var aunit = document.getElementById("iaunit" + (counter - 1)).value;
                var weight = document.getElementById("iweight" + (counter - 1)).value;
                var wunit = document.getElementById("iwunit" + (counter - 1)).value;
                var ProgramID = $("#ProgramCurrent").val().toString();
                var ExerciseID = $(this).closest("#ExerciseTable").attr("tag").toString();

                var json = JSON.stringify({
                    'ProgramID': ProgramID,
                    'ExerciseID': ExerciseID,
                    'Amount': amount.toString(),
                    'Aunit': aunit.toString(),
                    'Weight': weight.toString(),
                    'Wunit': wunit.toString()
                });

                console.log(json);

                if (amount != "" || amount > 0) {
                    if (aunit > 0) {
                        if ((weight > 0 && wunit > 0) || weight == "") {

                            if (weight == "") { weight = "0"; }

                            $('#loading-indicator').show();

                            $.ajax({
                                url: "/workout/AddSets",
                                type: "POST",
                                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                data: json,
                                success: function (data) {
                                    data = JSON.parse(data);
                                    $('#loading-indicator').hide();
                                    $(".addrow").show();

                                    $('td#aunit' + (counter - 1)).empty();
                                    $('td#wunit' + (counter - 1)).empty();
                                    $('td#amount' + (counter - 1)).html(amount);
                                    $('td#aunit' + (counter - 1)).html(getStringForUnit("a", aunit, wunit));
                                    $('td#weight' + (counter - 1)).html(weight);
                                    $('td#wunit' + (counter - 1)).html(getStringForUnit("w", aunit, wunit));
                                    $('td#trash' + (counter - 1)).html('<i onclick="setDelete(' + data.id + ')" class="fa fa-fw fa-trash" data-toggle="tooltip" data-placement="top" title="" data-original-title="Delete this set"></i>');
                                    $('tr#insert').attr("id", data.id);

                                    $(".ErrorIf").hide();
                                    $(".SuccessIF").text("Congrats! Your stats have been added to this workout successfully!").show();
                                    setTimeout(function () {
                                        $(".SuccessIF").fadeOut().empty();
                                    }, 5000);
                                },
                                error: function () {
                                    console.log("Something happened...");
                                }
                            });

                            $(this).remove();
                            $(".ibtnRem").remove();

                        } else { $(".ErrorIf").html("The weight can't be 0 and if it's greater than 0 the unit needs to be chosen as well"); $(".ErrorIf").show(); }
                    } else {
                        $(".ErrorIf").html("The unit for the amount needs to be chosen");
                        $(".ErrorIf").show();
                    }
                } else {
                    $(".ErrorIf").html("A value for amount needs to be entered");
                    $(".ErrorIf").show();
                }
            });
        });

        function getStringForUnit(unit, aunit, wunit) {
            var answer = "";
            if (unit === "a") {
                if (aunit == 1) { answer = "Kilometers"; }
                else if (aunit == 2) { answer = "Miles"; }
                else if (aunit == 3) { answer = "Minutes"; }
                else if (aunit == 4) { answer = "Repetition"; }

            } else if (unit === "w") {
                if (wunit == 0) { answer = ""; }
                else if (wunit == 1) { answer = "Body Weight"; }
                else if (wunit == 2) { answer = "Kilograms"; }
                else if (wunit == 3) { answer = "Pounds"; }

            }
            return answer;
        }

        function setDelete(set) {
            var result = confirm("Are you sure you want to delete this Set?");
            if (result) {

                var ProgramID = $("#ProgramCurrent").val().toString();

                var json = JSON.stringify({
                    'ProgramID': ProgramID,
                    //'ExerciseID': ExerciseID,
                    'SetID': set.toString()
                });

                $.ajax({
                    url: '@Url.Action("DeleteSet", "Workout")',
                    type: "POST",
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: json,
                    success: function (data) {

                        $('#'+set).remove();
                        $(".SuccessIF").text("The Set was successfully deleted").show();
                        setTimeout(function () {
                            $(".SuccessIF").fadeOut().empty();
                        }, 5000);
                    },
                    error: function () {
                        console.log("An error happened");
                    }
                });
            }
        }

        function exercisesDelete(ex) {
            var result = confirm("Are you sure you want to delete this Exercise (all the associated Sets will also be deleted)?");
            if (result) {

                var ProgramID = $("#ProgramCurrent").val().toString();

                var json = JSON.stringify({
                    'ProgramID': ProgramID,
                    'ExerciseID': ex.toString()
                });

                $.ajax({
                    url: '@Url.Action("DeleteExercise", "Workout")',
                    type: "POST",
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: json,
                    success: function (data) {
                        $('#exercise' + ex).remove();
                        $("#topList").text("The Exercise and associated Sets were successfully deleted");
                        setTimeout(function () {
                            $("#topList").fadeOut().empty();
                        }, 5000);
                    },
                    error: function () {
                        console.log("An error happened");
                    }
                });
            }
        }

        function exerciseEdit(pid, exid, name, day) {
            document.getElementById('pid').value = pid;
            document.getElementById('exid').value = exid;
            $("#EditExerciseForm").find("#ExerciseID").val(name);
            $("#EditExerciseForm").find("#Day").val(day);
        }

        $("#EditExerciseModal").on("hidden.bs.modal", function () {
            $("#EditExerciseForm").trigger("reset");
            $("#EditExerciseForm").find(".validation-summary-valid ul").html("");
            $("#EditExerciseForm").find(".field-validation-valid").empty();
        });

        function exerciseAdd(pid) {
            document.getElementById('pidE').value = pid;
            var day = $(".nav-tabs").find(".nav-link.active").html();
            day = day.substr(day.length - 1)
            console.log(day.substr(day.length-1));
            document.getElementById('dayE').value = day;
        }

        $("#AddExerciseModal").on("hidden.bs.modal", function () {
            $("#AddExerciseForm").trigger("reset");
            $("#AddExerciseForm").find(".validation-summary-valid ul").html("");
            $("#AddExerciseForm").find(".field-validation-valid").empty();
            $("#AddExerciseForm").find("input").val("");
            $("#AddExerciseForm").find("select").val(0);
            $("#ExerciseIDE").val(-1);
        });

    </script>
}

