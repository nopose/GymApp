@using System.Collections.Generic
@using System.Linq
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@model WorkoutViewModel
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@{
    ViewData["Title"] = "My Programs";
    AppUser user = null;
    List<TrainingProgram> workouts = ViewBag.Workouts;
    if (SignInManager.IsSignedIn(User))
    {
        user = await UserManager.GetUserAsync(User);
    }
}
<style>
    .program {
        color: #ffc107;
        font-size: 1.5em;
    }
    .program:hover {
        color: #ffc107;
        text-shadow: 1px 1px 1px #ccc;
        font-size: 1.5em;
    }
</style>
<h2>@ViewData["Title"]</h2>
<hr />
<div class="container">
    @if (workouts.Count == 0)
    {
        <div class="row text-center">
            <h5>You don't have any programs right now....</h5>
            <div class="form-group col-md-12">
                <button class="btn btn-primary col-md-12" onclick="CreateProgram();" data-toggle="modal" data-target="#CreateProgramModal">Add new program right now!</button>
            </div>
        </div>

    }
    else
    {
        @foreach (var item in workouts)
        {
            <div class="card" style="margin-bottom:1%;">
                <div class="card-header">
                    Workout #@(workouts.IndexOf(item) + 1)
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <h5 class="card-title">@item.name</h5>
                        </div>
                        <div class="col-md-3">
                            <p class="card-text">Start Date : @item.StartDate.ToLongDateString()</p>
                        </div>
                        <div class="col-md-3">
                            <p class="card-text">End Date : @item.EndDate.ToLongDateString()</p>
                        </div>
                        <div class="col-md-1 text-center">
                            <span data-toggle="tooltip" data-placement="top" title="Add Exercise to this Workout"><i class="fa fa-plus-circle program"></i></span>
                        </div>
                        <div class="col-md-1">
                            <span data-toggle="tooltip" data-placement="top" title="More about this Workout"><i class="fa fa-info-circle program"></i></span>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="card">
            <div class="card-body">
                <button class="btn btn-primary col-md-12" onclick="CreateProgram();" data-toggle="modal" data-target="#CreateProgramModal">Add new program right now!</button>
            </div>
        </div>
    }

    <div class="modal fade" id="CreateProgramModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Creating a new Program</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                @using (Html.BeginForm("AddWorkout", "Workout", FormMethod.Post, new { }))
                {
                    <div class="modal-body">
                        <input id="id" asp-for="UserID" hidden value="@user.Id" />
                        <hr />
                        <div asp-validation-summary="All" class="text-danger"></div>
                        <div class="form-group col-md-12">
                            <label asp-for="WorkoutName"></label>
                            <input id="WorkoutName" asp-for="WorkoutName" class="form-control" />
                            <span asp-validation-for="WorkoutName" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-12">
                            <label asp-for="WorkoutDescription"></label>
                            <input asp-for="WorkoutDescription" class="form-control" />
                            <span asp-validation-for="WorkoutDescription" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-12">
                            <label asp-for="StartDate"></label>
                            <input type="date" asp-for="StartDate" class="form-control" />
                            <span asp-validation-for="StartDate" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-12">
                            <label asp-for="EndDate"></label>
                            <input type="date" asp-for="EndDate" class="form-control" />
                            <span asp-validation-for="EndDate" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Add</button>
                    </div>
                }
            </div>
        </div>
    </div>

</div>
@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        $("#CreateProgramModal").on("shown.bs.modal", function () {
            $("#WorkoutName").trigger('focus');
        });
    </script>

}

